<div class="d-flex w-" style="width: 100%;">
   <div style="width: 100%;">
      <h3>
         DANH SÁCH CÁC CUỘC BỎ PHIẾU ĐANG DIỄN RA
         <%= item.title %>
      </h3>

      <table class="table table-striped">
         <thead>
            <tr>
               <th scope="col">#</th>
               <th scope="col">Tên ứng viên</th>
               <th scope="col">Chọn ứng viên</th>
            </tr>
         </thead>
         <tbody>
            <% item.candidateusers.forEach((item2,index)=> { %>
               <tr>
                  <th scope="row">
                     <%= index + 1%>
                  </th>
                  <td>
                     <%= item2.name %>
                  </td>
                  <td>
                     <input type="radio"  name="options<%= item._id %>" value="<%= item2.index %>">
                  </td>
               </tr>
               <% }); %>
         </tbody>
      </table>
      <br>
      <div>
         <h5>N: <%= item.n %>
         </h5>
         <h5>E: <%= item.e %>
         </h5>
      </div>
      <br>
      <button id="btncypher<%= item._id %>">Mã hóa phiếu bầu</button>
      <br>
      <br>
      <div style="display:flex; align-items: center;">
         <div>
            <input disabled value="cypher" id="cypher<%= item._id %>"></input>
            <br>
            <br>
            <button id="btnycblind<%= item._id %>">Yêu cầu ký</button>
         </div>
         <div style="margin-left: 40px; margin-right: 40px;">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-arrow-right"
               viewBox="0 0 16 16">
               <path fill-rule="evenodd"
                  d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8" />
            </svg>
         </div>
         <div>
            <input disabled value="Blind SigNature" id="blindvalue<%= item._id %>"></input>
            <br>
            <br>
            <button id="btnbind<%= item._id %>">Yêu cầu chữ ký mù </button>

         </div>
         <div style="margin-left: 40px; margin-right: 40px;">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-arrow-right"
               viewBox="0 0 16 16">
               <path fill-rule="evenodd"
                  d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8" />
            </svg>
         </div>
         <div>
            <input disabled value="UnBlind SigNature" id="unblindvalue<%= item._id %>"></input>
            <br>
            <br>
            <button id="btnunbind<%= item._id %>">Xóa mù chữ ký</button>
         </div>
         <div style="margin-left: 40px; margin-right: 40px;">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-arrow-right"
               viewBox="0 0 16 16">
               <path fill-rule="evenodd"
                  d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8" />
            </svg>
         </div>
         <div style="margin-left: 40px; margin-right: 40px; ">
            <button id="btnvoting<%= item._id %>" style="width: 100px; height: 40px;">Biểu quyết</button>
         </div>
      </div>

   </div>

</div>
<br>
<br>
<br>
<br>

<script>

   function gcd(a, b) {
         while (b != 0) {
            const temp = b;
            b = a % b;
            a = temp;
         }
         return a;
      }


      function findN(r) {
         const a = Math.floor(Math.random() * (100000 - 10000 + 1)) + 10000;
         for (let n = a; n <= r; n++) {
            if (gcd(n, r) === 1) {
               return n;
            }
         }
         return null;
      }
      function modInverse(d, n) {
            let [t, newT] = [0, 1];
            let [r, newR] = [n, d];

            while (newR !== 0) {
               const quotient = Math.floor(r / newR);
               [t, newT] = [newT, t - quotient * newT];
               [r, newR] = [newR, r - quotient * newR];
            }

            if (t < 0) {
               t = t + n;
            }

            return t;
         }
      //pp bình phương có lặp
      function modExp(base, exponent, modulus) {
            if (modulus === 1) return 0;

            let result = 1;
            base = base % modulus;

            while (exponent > 0) {
               if (exponent % 2 === 1) {
                  result = (result * base) % modulus;
               }
               base = (base * base) % modulus;
               exponent = Math.floor(exponent / 2);
            }

            return result;
         }

      document.getElementById('btncypher<%= item._id %>').addEventListener('click', function (event) {
         const n = Number.parseInt("<%= item.n %>");
         const e = Number.parseInt("<%= item.e %>");
         event.preventDefault();

         const options = document.getElementsByName('options<%= item._id %>');
         let selectedOption = '';
         for (const option of options) {
            if (option.checked) {
               selectedOption = parseInt(option.value);
               break;
            }
         }
         let m = Number.parseInt(selectedOption);
         let r = findN(n);
         const c = (m * modExp(r, e, n)) % n;
         document.cookie = `r<%=item._id %>=${r}`;
         document.cookie = `m<%=item._id %>=${m}`;
         const input = document.getElementById("cypher<%= item._id %>");
         input.value = c;
         toastr.success("Mã hóa phiếu bầu thành công");
      });
      
      document.getElementById('btnycblind<%= item._id %>').addEventListener('click', function (event) {
            event.preventDefault();

            const c = document.getElementById("cypher<%= item._id %>").value;
            const formData = {
               c,
               voting: "<%= item._id %>"
            };
            console.log(formData);

            fetch('/voting/sendC', {
               method: 'POST',
               headers: {
                  'Content-Type': 'application/json'
               },
               body: JSON.stringify(formData)
            })
               .then(response => response.json())
               .then(data => {
                  if(data.status === 400){
                     toastr.error(data.message);
                     
                  }
                  else{
                     toastr.success(data.message);
                  }
               })
               .catch((error) => {
                  console.error('Error:', error);
            });
         });


      document.getElementById('btnbind<%= item._id %>').addEventListener('click', function (event) {
         event.preventDefault();

         fetch(`/voting/getSig?voting=<%= item._id %>`, {
            method: 'GET',
            headers: {
               'Content-Type': 'application/json'
            },
         })
            .then(response => response.json())
            .then(data => {
               // document.cookie = `access_token=${data.access_token}`;
               // window.location.href = '/'
               console.log(data);
               document.getElementById("blindvalue<%= item._id %>").value = data.sig;
               if (data.status == 400) {
                  toastr.error(data.message);
               }
               else {
                  toastr.success(data.message);
               }
            })
            .catch((error) => {
               console.error('Error:', error);
            });
      });

      document.getElementById('btnunbind<%= item._id %>').addEventListener('click', function (event) {
            event.preventDefault();
            const n = Number.parseInt("<%= item.n %>");
            const blindsig = document.getElementById("blindvalue<%= item._id %>").value;

            function getCookie(name) {
              
               const namePattern = name + "=";
               
               const cookies = document.cookie.split(';');

               
               for (let i = 0; i < cookies.length; i++) {
                  let cookie = cookies[i];
                  
                  while (cookie.charAt(0) == ' ') {
                     cookie = cookie.substring(1);
                  }
                  
                  if (cookie.indexOf(namePattern) == 0) {
                     
                     return cookie.substring(namePattern.length, cookie.length);
                  }
               }
               
               return null;
            }
            const r = parseInt(getCookie("r<%= item._id %>"));
            const sig = (parseInt(blindsig)% n)*(modInverse(r,n)%n)%n;
            document.getElementById("unblindvalue<%= item._id %>").value = sig;
            toastr.success("Xóa mù thành công");
         });


         document.getElementById('btnvoting<%= item._id %>').addEventListener('click', function (event) {
            event.preventDefault();

            function getCookie(name) {
              
               const namePattern = name + "=";
               
               const cookies = document.cookie.split(';');

               
               for (let i = 0; i < cookies.length; i++) {
                  let cookie = cookies[i];
                  
                  while (cookie.charAt(0) == ' ') {
                     cookie = cookie.substring(1);
                  }
                  
                  if (cookie.indexOf(namePattern) == 0) {
                     
                     return cookie.substring(namePattern.length, cookie.length);
                  }
               }
               
               return null;
            }
            const m = parseInt(getCookie("m<%= item._id %>"));
            
            const sig = document.getElementById("unblindvalue<%= item._id %>").value;
            const formData = {
               m,
               sig,
               voting: "<%= item._id %>"
            }
            fetch(`/voting`, {
               method: 'POST',
               headers: {
                  'Content-Type': 'application/json'
               },
               body: JSON.stringify(formData)
            })
               .then(response => response.json())
               .then(data => {
                  if(data.status == 400){
                     toastr.error(data.message);
                  }
                  else{
                     toastr.success(data.message);
                  }

               })
               .catch((error) => {
                  console.error('Error:', error);
               });
         });

</script>